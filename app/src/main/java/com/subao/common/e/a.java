package com.subao.common.e;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.text.TextUtils;
import android.util.Log;
import com.subao.common.d;
import com.subao.common.e.ad;
import com.subao.common.e.d;
import com.subao.common.e.e;
import com.subao.common.e.n;
import com.subao.common.e.v;
import com.subao.common.e.z;
import com.subao.common.g.c;
import com.subao.common.intf.InstalledApplication;
import com.subao.common.intf.InstalledApplicationsSupplier;
import com.subao.common.n.g;
import com.tencent.component.net.download.multiplex.http.MttRequest;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;

/* compiled from: AccelDataRefresher */
public class a {
    static final byte[] a = {123, 13, 10, 32, 32, 34, MttRequest.REQUEST_BROKER, 97, 109, MttRequest.REQUEST_NORMAL, 76, 105, 115, 116, 34, 58, 32, 91, 13, 10, 32, 32, 32, 32, 123, 13, 10, 32, 32, 32, 32, 32, 32, 34, 97, 112, 112, 76, 97, 98, MttRequest.REQUEST_NORMAL, 108, 34, 58, 32, 34, -25, -114, -117, -24, Byte.MIN_VALUE, -123, -24, -115, -93, -24, Byte.MIN_VALUE, Byte.MIN_VALUE, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 97, 99, 99, MttRequest.REQUEST_NORMAL, 108, 77, 111, 100, MttRequest.REQUEST_NORMAL, 34, 58, 32, 49, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 98, 105, 116, 70, 108, 97, MttRequest.REQUEST_BROKER, 34, 58, 32, 49, 56, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 119, MttRequest.REQUEST_FILE_DOWNLOAD, 105, 116, MttRequest.REQUEST_NORMAL, 73, 112, 115, 34, 58, 32, 91, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 54, 49, 46, 49, 53, 49, 46, 49, 56, 54, 46, 49, 50, 52, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 54, 49, 46, 49, 53, 49, 46, 49, 56, 54, 46, 49, 50, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 54, 49, 46, 49, 50, 57, 46, 56, 46, 49, 48, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 54, 49, 46, 49, 50, 57, 46, 56, 46, 49, 48, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 54, 49, 46, 49, 50, 57, 46, 56, 46, 49, 48, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 54, 49, 46, 49, 50, 57, 46, 56, 46, 49, 48, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 53, 56, 46, 50, 52, 55, 46, 50, 49, 53, 46, 49, 48, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 53, 56, 46, 50, 52, 55, 46, 50, 49, 53, 46, 49, 48, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 53, 56, 46, 50, 52, 54, 46, 50, 50, 51, 46, 49, 52, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 53, 56, 46, 50, 52, 54, 46, 50, 50, 51, 46, 49, 51, 57, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 53, 56, 46, 50, 52, 54, 46, 50, 50, 48, 46, 51, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 50, 50, 51, 46, 49, 54, 55, 46, 56, 50, 46, 49, 53, 53, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 50, 50, 51, 46, 49, 54, 55, 46, 56, 50, 46, 49, 53, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 50, 50, 51, 46, 49, 54, 55, 46, 49, 48, 53, 46, 52, 53, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 50, 48, 51, 46, 50, 48, 53, 46, 49, 50, 56, 46, 49, 50, 52, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 50, 48, 51, 46, 50, 48, 53, 46, 49, 50, 56, 46, 49, 50, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 56, 51, 46, 49, 57, 50, 46, 50, 48, 48, 46, 52, 56, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 56, 51, 46, 49, 57, 50, 46, 50, 48, 48, 46, 52, 55, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 56, 50, 46, 50, 53, 52, 46, 57, 50, 46, 49, 50, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 56, 50, 46, 50, 53, 52, 46, 52, 50, 46, 50, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 56, 50, 46, 50, 53, 52, 46, 52, 50, 46, 50, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 56, 48, 46, 49, 54, 51, 46, 50, 54, 46, 51, 56, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 56, 48, 46, 49, 54, 51, 46, 50, 54, 46, 51, 55, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 52, 48, 46, 50, 48, 55, 46, 50, 54, 46, 49, 49, 53, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 52, 48, 46, 50, 48, 55, 46, 49, 51, 53, 46, 51, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 52, 48, 46, 50, 48, 55, 46, 49, 50, 50, 46, 49, 52, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 52, 48, 46, 50, 48, 55, 46, 49, 50, 50, 46, 49, 51, 57, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 52, 48, 46, 50, 48, 55, 46, 49, 49, 57, 46, 49, 52, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 52, 48, 46, 50, 48, 55, 46, 49, 49, 57, 46, 49, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 49, 46, 53, 49, 46, 51, 55, 46, 49, 48, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 49, 46, 53, 49, 46, 51, 55, 46, 49, 48, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 49, 46, 53, 49, 46, 51, 55, 46, 49, 48, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 49, 46, 53, 49, 46, 51, 55, 46, 49, 48, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 57, 46, 49, 48, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 57, 46, 49, 48, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 57, 46, 49, 48, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 57, 46, 49, 48, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 51, 46, 49, 52, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 51, 46, 49, 52, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 51, 46, 49, 52, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 51, 46, 49, 51, 57, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 49, 49, 46, 50, 48, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 48, 46, 49, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 48, 46, 49, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 55, 46, 49, 56, 53, 46, 49, 49, 57, 46, 49, 52, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 55, 46, 49, 56, 53, 46, 49, 49, 57, 46, 49, 52, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 55, 46, 49, 52, 52, 46, 50, 52, 53, 46, 50, 49, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 55, 46, 49, 52, 52, 46, 50, 52, 50, 46, 50, 55, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 55, 46, 49, 52, 52, 46, 50, 52, 50, 46, 50, 54, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 55, 46, 49, 54, 56, 46, 49, 52, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 55, 46, 49, 54, 56, 46, 49, 52, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 55, 46, 49, 54, 56, 46, 49, 51, 57, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 55, 46, 49, 54, 50, 46, 49, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 55, 46, 49, 54, 50, 46, 49, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 55, 46, 49, 52, 51, 46, 54, 56, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 55, 46, 49, 51, 57, 46, 50, 49, 57, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 55, 46, 49, 51, 57, 46, 49, 54, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 54, 46, 50, 49, 51, 46, 49, 52, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 54, 46, 50, 49, 51, 46, 49, 52, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 54, 46, 50, 49, 51, 46, 49, 51, 57, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 54, 46, 50, 49, 50, 46, 51, 53, 47, 51, 50, 34, 13, 10, 32, 32, 32, 32, 32, 32, 93, 13, 10, 32, 32, 32, 32, 125, 44, 13, 10, 32, 32, 32, 32, 123, 13, 10, 32, 32, 32, 32, 32, 32, 34, 97, 112, 112, 76, 97, 98, MttRequest.REQUEST_NORMAL, 108, 34, 58, 32, 34, -25, -112, -125, -25, -112, -125, -27, -92, -89, -28, -67, -100, -26, -120, -104, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 97, 99, 99, MttRequest.REQUEST_NORMAL, 108, 77, 111, 100, MttRequest.REQUEST_NORMAL, 34, 58, 32, 49, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 98, 105, 116, 70, 108, 97, MttRequest.REQUEST_BROKER, 34, 58, 32, 51, 52, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 119, MttRequest.REQUEST_FILE_DOWNLOAD, 105, 116, MttRequest.REQUEST_NORMAL, 73, 112, 115, 34, 58, 32, 91, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 51, 46, 49, 57, 50, 46, 50, 53, 53, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 51, 46, 53, 53, 46, 49, 55, 52, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 53, 46, 49, 53, 57, 46, 50, 52, 56, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 53, 46, 49, 53, 57, 46, 50, 52, 57, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 53, 46, 49, 53, 57, 46, 50, 53, 48, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 53, 46, 49, 53, 57, 46, 50, 53, 49, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 53, 46, 49, 53, 57, 46, 50, 53, 50, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 53, 46, 49, 53, 57, 46, 50, 53, 51, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 55, 46, 49, 56, 52, 46, 51, 52, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 55, 46, 49, 56, 52, 46, 51, 54, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 55, 46, 49, 56, 52, 46, 51, 55, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 55, 46, 49, 56, 52, 46, 51, 57, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 55, 46, 49, 56, 52, 46, 52, 48, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 55, 46, 49, 56, 52, 46, 52, 49, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 50, 50, 50, 46, 55, 51, 46, 49, 53, 52, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 50, 50, 50, 46, 55, 51, 46, 49, 53, 53, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 50, 50, 50, 46, 55, 51, 46, 49, 57, 53, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 52, 53, 46, 49, 49, 53, 46, 49, 52, 52, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 52, 53, 46, 49, 49, 53, 46, 49, 52, 55, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 51, 46, 50, 48, 55, 46, 56, 48, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 56, 46, 49, 57, 52, 46, 51, 50, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 57, 50, 46, 50, 56, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 50, 48, 50, 46, 49, 48, 56, 46, 53, 51, 46, 49, 47, 50, 52, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 54, 49, 46, 49, 51, 53, 46, 50, 49, 50, 46, 49, 47, 50, 52, 34, 13, 10, 32, 32, 32, 32, 32, 32, 93, 13, 10, 32, 32, 32, 32, 125, 44, 13, 10, 32, 32, 32, 32, 123, 13, 10, 32, 32, 32, 32, 32, 32, 34, 97, 112, 112, 76, 97, 98, MttRequest.REQUEST_NORMAL, 108, 34, 58, 32, 34, -25, -87, -65, -24, -74, -118, -25, -127, -85, -25, -70, -65, -17, -68, -102, -26, -98, -86, -26, -120, -104, -25, -114, -117, -24, Byte.MIN_VALUE, -123, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 97, 99, 99, MttRequest.REQUEST_NORMAL, 108, 77, 111, 100, MttRequest.REQUEST_NORMAL, 34, 58, 32, 49, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 98, 105, 116, 70, 108, 97, MttRequest.REQUEST_BROKER, 34, 58, 32, 49, 56, 13, 10, 32, 32, 32, 32, 125, 44, 13, 10, 32, 32, 32, 32, 123, 13, 10, 32, 32, 32, 32, 32, 32, 34, 97, 112, 112, 76, 97, 98, MttRequest.REQUEST_NORMAL, 108, 34, 58, 32, 34, 71, 97, 109, MttRequest.REQUEST_NORMAL, 67, 108, 111, 110, MttRequest.REQUEST_NORMAL, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 97, 99, 99, MttRequest.REQUEST_NORMAL, 108, 77, 111, 100, MttRequest.REQUEST_NORMAL, 34, 58, 32, 49, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 98, 105, 116, 70, 108, 97, MttRequest.REQUEST_BROKER, 34, 58, 32, 53, 48, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 119, MttRequest.REQUEST_FILE_DOWNLOAD, 105, 116, MttRequest.REQUEST_NORMAL, 73, 112, 115, 34, 58, 32, 91, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 50, 46, 50, 50, 52, 46, 55, 51, 46, 49, 47, 50, 52, 34, 13, 10, 32, 32, 32, 32, 32, 32, 93, 13, 10, 32, 32, 32, 32, 125, 44, 13, 10, 32, 32, 32, 32, 123, 13, 10, 32, 32, 32, 32, 32, 32, 34, 97, 112, 112, 76, 97, 98, MttRequest.REQUEST_NORMAL, 108, 34, 58, 32, 34, -24, -65, -123, -26, -72, -72, 83, 68, 75, 45, 83, 97, 109, 112, 108, MttRequest.REQUEST_NORMAL, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 97, 99, 99, MttRequest.REQUEST_NORMAL, 108, 77, 111, 100, MttRequest.REQUEST_NORMAL, 34, 58, 32, 49, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 98, 105, 116, 70, 108, 97, MttRequest.REQUEST_BROKER, 34, 58, 32, 53, 48, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 119, MttRequest.REQUEST_FILE_DOWNLOAD, 105, 116, MttRequest.REQUEST_NORMAL, 73, 112, 115, 34, 58, 32, 91, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 50, 46, 50, 50, 52, 46, 55, 51, 46, 49, 54, 56, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 54, 49, 46, 49, 53, 49, 46, 49, 56, 54, 46, 49, 50, 52, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 54, 49, 46, 49, 53, 49, 46, 49, 56, 54, 46, 49, 50, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 54, 49, 46, 49, 50, 57, 46, 56, 46, 49, 48, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 54, 49, 46, 49, 50, 57, 46, 56, 46, 49, 48, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 54, 49, 46, 49, 50, 57, 46, 56, 46, 49, 48, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 54, 49, 46, 49, 50, 57, 46, 56, 46, 49, 48, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 53, 56, 46, 50, 52, 55, 46, 50, 49, 53, 46, 49, 48, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 53, 56, 46, 50, 52, 55, 46, 50, 49, 53, 46, 49, 48, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 53, 56, 46, 50, 52, 54, 46, 50, 50, 51, 46, 49, 52, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 53, 56, 46, 50, 52, 54, 46, 50, 50, 51, 46, 49, 51, 57, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 53, 56, 46, 50, 52, 54, 46, 50, 50, 48, 46, 51, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 50, 50, 51, 46, 49, 54, 55, 46, 56, 50, 46, 49, 53, 53, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 50, 50, 51, 46, 49, 54, 55, 46, 56, 50, 46, 49, 53, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 50, 50, 51, 46, 49, 54, 55, 46, 49, 48, 53, 46, 52, 53, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 50, 48, 51, 46, 50, 48, 53, 46, 49, 50, 56, 46, 49, 50, 52, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 50, 48, 51, 46, 50, 48, 53, 46, 49, 50, 56, 46, 49, 50, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 56, 51, 46, 49, 57, 50, 46, 50, 48, 48, 46, 52, 56, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 56, 51, 46, 49, 57, 50, 46, 50, 48, 48, 46, 52, 55, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 56, 50, 46, 50, 53, 52, 46, 57, 50, 46, 49, 50, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 56, 50, 46, 50, 53, 52, 46, 52, 50, 46, 50, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 56, 50, 46, 50, 53, 52, 46, 52, 50, 46, 50, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 56, 48, 46, 49, 54, 51, 46, 50, 54, 46, 51, 56, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 56, 48, 46, 49, 54, 51, 46, 50, 54, 46, 51, 55, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 52, 48, 46, 50, 48, 55, 46, 50, 54, 46, 49, 49, 53, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 52, 48, 46, 50, 48, 55, 46, 49, 51, 53, 46, 51, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 52, 48, 46, 50, 48, 55, 46, 49, 50, 50, 46, 49, 52, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 52, 48, 46, 50, 48, 55, 46, 49, 50, 50, 46, 49, 51, 57, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 52, 48, 46, 50, 48, 55, 46, 49, 49, 57, 46, 49, 52, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 52, 48, 46, 50, 48, 55, 46, 49, 49, 57, 46, 49, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 49, 46, 53, 49, 46, 51, 55, 46, 49, 48, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 49, 46, 53, 49, 46, 51, 55, 46, 49, 48, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 49, 46, 53, 49, 46, 51, 55, 46, 49, 48, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 49, 46, 53, 49, 46, 51, 55, 46, 49, 48, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 57, 46, 49, 48, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 57, 46, 49, 48, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 57, 46, 49, 48, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 57, 46, 49, 48, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 51, 46, 49, 52, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 51, 46, 49, 52, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 51, 46, 49, 52, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 51, 46, 49, 51, 57, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 49, 49, 46, 50, 48, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 48, 46, 49, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 50, 48, 46, 50, 48, 52, 46, 48, 46, 49, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 55, 46, 49, 56, 53, 46, 49, 49, 57, 46, 49, 52, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 55, 46, 49, 56, 53, 46, 49, 49, 57, 46, 49, 52, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 55, 46, 49, 52, 52, 46, 50, 52, 53, 46, 50, 49, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 55, 46, 49, 52, 52, 46, 50, 52, 50, 46, 50, 55, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 49, 55, 46, 49, 52, 52, 46, 50, 52, 50, 46, 50, 54, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 55, 46, 49, 54, 56, 46, 49, 52, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 55, 46, 49, 54, 56, 46, 49, 52, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 55, 46, 49, 54, 56, 46, 49, 51, 57, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 55, 46, 49, 54, 50, 46, 49, 51, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 55, 46, 49, 54, 50, 46, 49, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 55, 46, 49, 52, 51, 46, 54, 56, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 55, 46, 49, 51, 57, 46, 50, 49, 57, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 55, 46, 49, 51, 57, 46, 49, 54, 50, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 54, 46, 50, 49, 51, 46, 49, 52, 49, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 54, 46, 50, 49, 51, 46, 49, 52, 48, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 54, 46, 50, 49, 51, 46, 49, 51, 57, 47, 51, 50, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 49, 48, 49, 46, 50, 50, 54, 46, 50, 49, 50, 46, 51, 53, 47, 51, 50, 34, 13, 10, 32, 32, 32, 32, 32, 32, 93, 13, 10, 32, 32, 32, 32, 125, 13, 10, 32, 32, 93, 13, 10, 125};
    @NonNull
    private final String b;
    private final n.a c;
    private final z.a d;
    private final c e;
    private final ad.a f;
    private e.a g;
    @Nullable
    private byte[] h;
    @NonNull
    private final InstalledApplicationsSupplier i;

    public a(@NonNull String str, n.a aVar, z.a aVar2, c cVar, ad.a aVar3, @NonNull InstalledApplicationsSupplier installedApplicationsSupplier) {
        this.b = str;
        this.c = aVar;
        this.d = aVar2;
        this.e = cVar;
        this.f = aVar3;
        this.i = installedApplicationsSupplier;
    }

    public al a(@NonNull Context context, List<b> list, @NonNull c cVar) {
        al a2 = al.a(list, this.i.getInstalledApplications(context));
        if (a2 == null || a2.a() == 0) {
            cVar.b(0, "key_game_node_tag_list", "");
        } else {
            a(a2, cVar);
        }
        return a2;
    }

    static void a(@NonNull al alVar, @NonNull c cVar) {
        StringBuilder sb = new StringBuilder(alVar.a() * 64);
        Iterator<ak> it = alVar.iterator();
        while (it.hasNext()) {
            ak next = it.next();
            if (!next.b() && !TextUtils.isEmpty(next.f)) {
                sb.append(next.f).append(',');
            }
        }
        if (sb.length() > 0) {
            sb.deleteCharAt(sb.length() - 1);
        }
        cVar.b(0, "key_game_node_tag_list", sb.toString());
        Iterator<ak> it2 = alVar.iterator();
        while (it2.hasNext()) {
            ak next2 = it2.next();
            if (!next2.b()) {
                cVar.a(next2);
            }
        }
    }

    public synchronized void a(e.a aVar) {
        this.g = aVar;
    }

    @Nullable
    private synchronized e.a e() {
        return this.g;
    }

    public synchronized void a(byte[] bArr) {
        this.h = bArr;
    }

    @Nullable
    private synchronized byte[] f() {
        return this.h;
    }

    private String a(String str, v.a aVar) {
        int i2 = 0;
        String a2 = v.a(this.d, this.e, aVar);
        if (d.a("SubaoData")) {
            Locale locale = n.b;
            Object[] objArr = new Object[2];
            objArr[0] = str;
            if (a2 != null) {
                i2 = a2.length();
            }
            objArr[1] = Integer.valueOf(i2);
            Log.d("SubaoData", String.format(locale, "%s = %d chars", objArr));
        }
        return a2;
    }

    public byte[] a(int i2) {
        aa a2 = af.a(this.d, i2);
        byte[] a3 = a2 != null ? a2.a() : null;
        if (d.a("SubaoData")) {
            Log.d("SubaoData", "PCode: " + g.a(a3));
        }
        return a3;
    }

    public e.a a() {
        e.a a2 = e.a(this.d, this.e);
        e.a e2 = e();
        if (e2 != null) {
            Log.w("SubaoData", "Use Debug Nodes: " + e2);
            return e2;
        }
        if (d.a("SubaoData")) {
            Log.d("SubaoData", "Accel Nodes: " + g.a((Object) a2));
        }
        return a2;
    }

    public al a(Context context) {
        if (this.c == n.a.SDK) {
            return null;
        }
        byte[] f2 = f();
        if (f2 == null || f2.length == 0) {
            f2 = a;
        }
        List<b> a2 = d.a(this.d, this.c == n.a.ROM ? 16 : 500, new d.b() {
            public void a(@Nullable List<b> list) {
                com.subao.common.h.a.a(list);
            }
        }, f2);
        com.subao.common.h.a.a(a2);
        return a(context, a2, this.e);
    }

    public String b() {
        return a("Game Server IP (GIP)", o.e());
    }

    public void c() {
        ab.a(this.d, this.e);
        ag.a(this.d, this.e);
        ad.a(this.d, this.f);
        ae.a(this.d, this.e);
    }

    public void d() {
        y.a(this.d, this.e, this.b);
    }

    public al b(Context context) {
        com.subao.common.d.a("SubaoData", "AccelDataRefresher.refreshAll()");
        d();
        a(this.e.b());
        a();
        b();
        c();
        return a(context);
    }

    /* renamed from: com.subao.common.e.a$a  reason: collision with other inner class name */
    /* compiled from: AccelDataRefresher */
    public static class C0006a implements InstalledApplicationsSupplier {
        private final boolean a;

        public C0006a(boolean z) {
            this.a = z;
        }

        @Nullable
        public Iterable<InstalledApplication> getInstalledApplications(@NonNull Context context) {
            List<ApplicationInfo> installedApplications;
            PackageManager packageManager = context.getPackageManager();
            if (packageManager == null || (installedApplications = packageManager.getInstalledApplications(0)) == null || installedApplications.isEmpty()) {
                return null;
            }
            int i = context.getApplicationInfo().uid;
            ArrayList arrayList = new ArrayList(installedApplications.size());
            for (ApplicationInfo next : installedApplications) {
                if (next.uid != i && (this.a || (com.subao.common.e.a(next.uid) && (next.flags & 1) == 0))) {
                    arrayList.add(new InstalledApplication(next.uid, next.packageName, next.loadLabel(packageManager).toString()));
                }
            }
            return arrayList.isEmpty() ? null : arrayList;
        }
    }
}
