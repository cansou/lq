package com.amazonaws.regions;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

class RegionDefaults {
    RegionDefaults() {
    }

    public static List<Region> getRegions() {
        List<Region> ret = new ArrayList<>();
        Region region = new Region("us-east-1", "");
        ret.add(region);
        updateRegion(region, "s3", "s3.amazonaws.com", true, true);
        updateRegion(region, ServiceAbbreviations.STS, "sts.amazonaws.com", false, true);
        updateRegion(region, ServiceAbbreviations.CloudWatch, "monitoring.us-east-1.amazonaws.com", true, true);
        updateRegion(region, ServiceAbbreviations.SNS, "sns.us-east-1.amazonaws.com", true, true);
        updateRegion(region, ServiceAbbreviations.Autoscaling, "autoscaling.us-east-1.amazonaws.com", true, true);
        updateRegion(region, ServiceAbbreviations.SimpleDB, "sdb.amazonaws.com", true, true);
        updateRegion(region, ServiceAbbreviations.Dynamodb, "dynamodb.us-east-1.amazonaws.com", true, true);
        updateRegion(region, ServiceAbbreviations.EC2, "ec2.us-east-1.amazonaws.com", true, true);
        updateRegion(region, "kinesis", "kinesis.us-east-1.amazonaws.com", false, true);
        updateRegion(region, "firehose", "firehose.us-east-1.amazonaws.com", false, true);
        updateRegion(region, "lambda", "lambda.us-east-1.amazonaws.com", false, true);
        updateRegion(region, ServiceAbbreviations.SQS, "sqs.us-east-1.amazonaws.com", true, true);
        updateRegion(region, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-east-1.amazonaws.com", true, true);
        updateRegion(region, "email", "email.us-east-1.amazonaws.com", false, true);
        updateRegion(region, "cognito-sync", "cognito-sync.us-east-1.amazonaws.com", false, true);
        updateRegion(region, "cognito-identity", "cognito-identity.us-east-1.amazonaws.com", false, true);
        updateRegion(region, "cognito-idp", "cognito-idp.us-east-1.amazonaws.com", false, true);
        updateRegion(region, "mobileanalytics", "mobileanalytics.us-east-1.amazonaws.com", false, true);
        updateRegion(region, "machinelearning", "machinelearning.us-east-1.amazonaws.com", false, true);
        updateRegion(region, "kms", "kms.us-east-1.amazonaws.com", false, true);
        updateRegion(region, "execute-api", "iot.us-east-1.amazonaws.com", false, true);
        Region region2 = new Region("us-west-1", "");
        ret.add(region2);
        updateRegion(region2, "s3", "s3-us-west-1.amazonaws.com", true, true);
        updateRegion(region2, ServiceAbbreviations.STS, "sts.amazonaws.com", false, true);
        updateRegion(region2, ServiceAbbreviations.CloudWatch, "monitoring.us-west-1.amazonaws.com", true, true);
        updateRegion(region2, ServiceAbbreviations.SNS, "sns.us-west-1.amazonaws.com", true, true);
        updateRegion(region2, ServiceAbbreviations.Autoscaling, "autoscaling.us-west-1.amazonaws.com", true, true);
        updateRegion(region2, ServiceAbbreviations.SimpleDB, "sdb.us-west-1.amazonaws.com", true, true);
        updateRegion(region2, ServiceAbbreviations.Dynamodb, "dynamodb.us-west-1.amazonaws.com", true, true);
        updateRegion(region2, ServiceAbbreviations.EC2, "ec2.us-west-1.amazonaws.com", true, true);
        updateRegion(region2, "kinesis", "kinesis.us-west-1.amazonaws.com", false, true);
        updateRegion(region2, ServiceAbbreviations.SQS, "sqs.us-west-1.amazonaws.com", true, true);
        updateRegion(region2, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-west-1.amazonaws.com", true, true);
        updateRegion(region2, "kms", "kms.us-west-1.amazonaws.com", false, true);
        Region region3 = new Region("us-west-2", "");
        ret.add(region3);
        updateRegion(region3, "s3", "s3-us-west-2.amazonaws.com", true, true);
        updateRegion(region3, ServiceAbbreviations.STS, "sts.amazonaws.com", false, true);
        updateRegion(region3, ServiceAbbreviations.CloudWatch, "monitoring.us-west-2.amazonaws.com", true, true);
        updateRegion(region3, ServiceAbbreviations.SNS, "sns.us-west-2.amazonaws.com", true, true);
        updateRegion(region3, ServiceAbbreviations.Autoscaling, "autoscaling.us-west-2.amazonaws.com", true, true);
        updateRegion(region3, ServiceAbbreviations.SimpleDB, "sdb.us-west-2.amazonaws.com", true, true);
        updateRegion(region3, ServiceAbbreviations.Dynamodb, "dynamodb.us-west-2.amazonaws.com", true, true);
        updateRegion(region3, ServiceAbbreviations.EC2, "ec2.us-west-2.amazonaws.com", true, true);
        updateRegion(region3, "kinesis", "kinesis.us-west-2.amazonaws.com", false, true);
        updateRegion(region3, "firehose", "firehose.us-west-2.amazonaws.com", false, true);
        updateRegion(region3, "lambda", "lambda.us-west-2.amazonaws.com", false, true);
        updateRegion(region3, ServiceAbbreviations.SQS, "sqs.us-west-2.amazonaws.com", true, true);
        updateRegion(region3, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-west-2.amazonaws.com", true, true);
        updateRegion(region3, "email", "email.us-west-2.amazonaws.com", false, true);
        updateRegion(region3, "kms", "kms.us-west-2.amazonaws.com", false, true);
        updateRegion(region3, "execute-api", "iot.us-west-2.amazonaws.com", false, true);
        Region region4 = new Region("ap-south-1", "");
        ret.add(region4);
        updateRegion(region4, "s3", "s3-ap-south-1.amazonaws.com", true, true);
        updateRegion(region4, ServiceAbbreviations.STS, "sts.amazonaws.com", false, true);
        updateRegion(region4, ServiceAbbreviations.CloudWatch, "monitoring.ap-south-1.amazonaws.com", true, true);
        updateRegion(region4, ServiceAbbreviations.SNS, "sns.ap-south-1.amazonaws.com", true, true);
        updateRegion(region4, ServiceAbbreviations.Autoscaling, "autoscaling.ap-south-1.amazonaws.com", true, true);
        updateRegion(region4, ServiceAbbreviations.Dynamodb, "dynamodb.ap-south-1.amazonaws.com", true, true);
        updateRegion(region4, ServiceAbbreviations.EC2, "ec2.ap-south-1.amazonaws.com", true, true);
        updateRegion(region4, "kinesis", "kinesis.ap-south-1.amazonaws.com", false, true);
        updateRegion(region4, ServiceAbbreviations.SQS, "sqs.ap-south-1.amazonaws.com", true, true);
        updateRegion(region4, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-south-1.amazonaws.com", true, true);
        updateRegion(region4, "kms", "kms.ap-south-1.amazonaws.com", false, true);
        Region region5 = new Region("ap-northeast-1", "");
        ret.add(region5);
        updateRegion(region5, "s3", "s3-ap-northeast-1.amazonaws.com", true, true);
        updateRegion(region5, ServiceAbbreviations.STS, "sts.amazonaws.com", false, true);
        updateRegion(region5, ServiceAbbreviations.CloudWatch, "monitoring.ap-northeast-1.amazonaws.com", true, true);
        updateRegion(region5, ServiceAbbreviations.SNS, "sns.ap-northeast-1.amazonaws.com", true, true);
        updateRegion(region5, ServiceAbbreviations.Autoscaling, "autoscaling.ap-northeast-1.amazonaws.com", true, true);
        updateRegion(region5, ServiceAbbreviations.SimpleDB, "sdb.ap-northeast-1.amazonaws.com", true, true);
        updateRegion(region5, ServiceAbbreviations.Dynamodb, "dynamodb.ap-northeast-1.amazonaws.com", true, true);
        updateRegion(region5, ServiceAbbreviations.EC2, "ec2.ap-northeast-1.amazonaws.com", true, true);
        updateRegion(region5, "kinesis", "kinesis.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region5, "lambda", "lambda.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region5, ServiceAbbreviations.SQS, "sqs.ap-northeast-1.amazonaws.com", true, true);
        updateRegion(region5, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-northeast-1.amazonaws.com", true, true);
        updateRegion(region5, "cognito-sync", "cognito-sync.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region5, "cognito-identity", "cognito-identity.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region5, "kms", "kms.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region5, "execute-api", "iot.ap-northeast-1.amazonaws.com", false, true);
        Region region6 = new Region("ap-northeast-2", "");
        ret.add(region6);
        updateRegion(region6, "s3", "s3-ap-northeast-2.amazonaws.com", true, true);
        updateRegion(region6, ServiceAbbreviations.STS, "sts.amazonaws.com", false, true);
        updateRegion(region6, ServiceAbbreviations.CloudWatch, "monitoring.ap-northeast-2.amazonaws.com", true, true);
        updateRegion(region6, ServiceAbbreviations.SNS, "sns.ap-northeast-2.amazonaws.com", true, true);
        updateRegion(region6, ServiceAbbreviations.Autoscaling, "autoscaling.ap-northeast-2.amazonaws.com", true, true);
        updateRegion(region6, ServiceAbbreviations.Dynamodb, "dynamodb.ap-northeast-2.amazonaws.com", true, true);
        updateRegion(region6, ServiceAbbreviations.EC2, "ec2.ap-northeast-2.amazonaws.com", true, true);
        updateRegion(region6, "kinesis", "kinesis.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region6, ServiceAbbreviations.SQS, "sqs.ap-northeast-2.amazonaws.com", true, true);
        updateRegion(region6, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-northeast-2.amazonaws.com", true, true);
        updateRegion(region6, "kms", "kms.ap-northeast-2.amazonaws.com", false, true);
        Region region7 = new Region("ap-southeast-1", "");
        ret.add(region7);
        updateRegion(region7, "s3", "s3-ap-southeast-1.amazonaws.com", true, true);
        updateRegion(region7, ServiceAbbreviations.STS, "sts.amazonaws.com", false, true);
        updateRegion(region7, ServiceAbbreviations.CloudWatch, "monitoring.ap-southeast-1.amazonaws.com", true, true);
        updateRegion(region7, ServiceAbbreviations.SNS, "sns.ap-southeast-1.amazonaws.com", true, true);
        updateRegion(region7, ServiceAbbreviations.Autoscaling, "autoscaling.ap-southeast-1.amazonaws.com", true, true);
        updateRegion(region7, ServiceAbbreviations.SimpleDB, "sdb.ap-southeast-1.amazonaws.com", true, true);
        updateRegion(region7, ServiceAbbreviations.Dynamodb, "dynamodb.ap-southeast-1.amazonaws.com", true, true);
        updateRegion(region7, ServiceAbbreviations.EC2, "ec2.ap-southeast-1.amazonaws.com", true, true);
        updateRegion(region7, "kinesis", "kinesis.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region7, ServiceAbbreviations.SQS, "sqs.ap-southeast-1.amazonaws.com", true, true);
        updateRegion(region7, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-southeast-1.amazonaws.com", true, true);
        updateRegion(region7, "kms", "kms.ap-southeast-1.amazonaws.com", false, true);
        Region region8 = new Region("ap-southeast-2", "");
        ret.add(region8);
        updateRegion(region8, "s3", "s3-ap-southeast-2.amazonaws.com", true, true);
        updateRegion(region8, ServiceAbbreviations.STS, "sts.amazonaws.com", false, true);
        updateRegion(region8, ServiceAbbreviations.CloudWatch, "monitoring.ap-southeast-2.amazonaws.com", true, true);
        updateRegion(region8, ServiceAbbreviations.SNS, "sns.ap-southeast-2.amazonaws.com", true, true);
        updateRegion(region8, ServiceAbbreviations.Autoscaling, "autoscaling.ap-southeast-2.amazonaws.com", true, true);
        updateRegion(region8, ServiceAbbreviations.SimpleDB, "sdb.ap-southeast-2.amazonaws.com", true, true);
        updateRegion(region8, ServiceAbbreviations.Dynamodb, "dynamodb.ap-southeast-2.amazonaws.com", true, true);
        updateRegion(region8, ServiceAbbreviations.EC2, "ec2.ap-southeast-2.amazonaws.com", true, true);
        updateRegion(region8, "kinesis", "kinesis.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region8, ServiceAbbreviations.SQS, "sqs.ap-southeast-2.amazonaws.com", true, true);
        updateRegion(region8, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-southeast-2.amazonaws.com", true, true);
        updateRegion(region8, "kms", "kms.ap-southeast-2.amazonaws.com", false, true);
        Region region9 = new Region("sa-east-1", "");
        ret.add(region9);
        updateRegion(region9, "s3", "s3-sa-east-1.amazonaws.com", true, true);
        updateRegion(region9, ServiceAbbreviations.STS, "sts.amazonaws.com", false, true);
        updateRegion(region9, ServiceAbbreviations.CloudWatch, "monitoring.sa-east-1.amazonaws.com", true, true);
        updateRegion(region9, ServiceAbbreviations.SNS, "sns.sa-east-1.amazonaws.com", true, true);
        updateRegion(region9, ServiceAbbreviations.Autoscaling, "autoscaling.sa-east-1.amazonaws.com", true, true);
        updateRegion(region9, ServiceAbbreviations.SimpleDB, "sdb.sa-east-1.amazonaws.com", true, true);
        updateRegion(region9, ServiceAbbreviations.Dynamodb, "dynamodb.sa-east-1.amazonaws.com", true, true);
        updateRegion(region9, ServiceAbbreviations.EC2, "ec2.sa-east-1.amazonaws.com", true, true);
        updateRegion(region9, ServiceAbbreviations.SQS, "sqs.sa-east-1.amazonaws.com", true, true);
        updateRegion(region9, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.sa-east-1.amazonaws.com", true, true);
        updateRegion(region9, "kms", "kms.sa-east-1.amazonaws.com", false, true);
        Region region10 = new Region("eu-west-1", "");
        ret.add(region10);
        updateRegion(region10, "s3", "s3-eu-west-1.amazonaws.com", true, true);
        updateRegion(region10, ServiceAbbreviations.STS, "sts.amazonaws.com", false, true);
        updateRegion(region10, ServiceAbbreviations.CloudWatch, "monitoring.eu-west-1.amazonaws.com", true, true);
        updateRegion(region10, ServiceAbbreviations.SNS, "sns.eu-west-1.amazonaws.com", true, true);
        updateRegion(region10, ServiceAbbreviations.Autoscaling, "autoscaling.eu-west-1.amazonaws.com", true, true);
        updateRegion(region10, ServiceAbbreviations.SimpleDB, "sdb.eu-west-1.amazonaws.com", true, true);
        updateRegion(region10, ServiceAbbreviations.Dynamodb, "dynamodb.eu-west-1.amazonaws.com", true, true);
        updateRegion(region10, ServiceAbbreviations.EC2, "ec2.eu-west-1.amazonaws.com", true, true);
        updateRegion(region10, "kinesis", "kinesis.eu-west-1.amazonaws.com", false, true);
        updateRegion(region10, "firehose", "firehose.eu-west-1.amazonaws.com", false, true);
        updateRegion(region10, "lambda", "lambda.eu-west-1.amazonaws.com", false, true);
        updateRegion(region10, ServiceAbbreviations.SQS, "sqs.eu-west-1.amazonaws.com", true, true);
        updateRegion(region10, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-west-1.amazonaws.com", true, true);
        updateRegion(region10, "email", "email.eu-west-1.amazonaws.com", false, true);
        updateRegion(region10, "cognito-sync", "cognito-sync.eu-west-1.amazonaws.com", false, true);
        updateRegion(region10, "cognito-identity", "cognito-identity.eu-west-1.amazonaws.com", false, true);
        updateRegion(region10, "machinelearning", "machinelearning.eu-west-1.amazonaws.com", false, true);
        updateRegion(region10, "kms", "kms.eu-west-1.amazonaws.com", false, true);
        updateRegion(region10, "execute-api", "iot.eu-west-1.amazonaws.com", false, true);
        Region region11 = new Region("eu-central-1", "");
        ret.add(region11);
        updateRegion(region11, ServiceAbbreviations.SQS, "sqs.eu-central-1.amazonaws.com", true, true);
        updateRegion(region11, "s3", "s3.eu-central-1.amazonaws.com", true, true);
        updateRegion(region11, ServiceAbbreviations.STS, "sts.amazonaws.com", false, true);
        updateRegion(region11, ServiceAbbreviations.CloudWatch, "monitoring.eu-central-1.amazonaws.com", true, true);
        updateRegion(region11, ServiceAbbreviations.SNS, "sns.eu-central-1.amazonaws.com", true, true);
        updateRegion(region11, ServiceAbbreviations.Autoscaling, "autoscaling.eu-central-1.amazonaws.com", true, true);
        updateRegion(region11, ServiceAbbreviations.Dynamodb, "dynamodb.eu-central-1.amazonaws.com", true, true);
        updateRegion(region11, ServiceAbbreviations.EC2, "ec2.eu-central-1.amazonaws.com", true, true);
        updateRegion(region11, "kinesis", "kinesis.eu-central-1.amazonaws.com", false, true);
        updateRegion(region11, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-central-1.amazonaws.com", true, true);
        updateRegion(region11, "kms", "kms.eu-central-1.amazonaws.com", false, true);
        Region region12 = new Region("cn-north-1", "amazonaws.com.cn");
        ret.add(region12);
        updateRegion(region12, ServiceAbbreviations.Dynamodb, "dynamodb.cn-north-1.amazonaws.com.cn", true, true);
        updateRegion(region12, ServiceAbbreviations.EC2, "ec2.cn-north-1.amazonaws.com.cn", true, true);
        updateRegion(region12, ServiceAbbreviations.SNS, "sns.cn-north-1.amazonaws.com.cn", true, true);
        updateRegion(region12, ServiceAbbreviations.SQS, "sqs.cn-north-1.amazonaws.com.cn", true, true);
        updateRegion(region12, "s3", "s3.cn-north-1.amazonaws.com.cn", true, true);
        updateRegion(region12, ServiceAbbreviations.STS, "sts.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(region12, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.cn-north-1.amazonaws.com.cn", true, true);
        updateRegion(region12, ServiceAbbreviations.Autoscaling, "autoscaling.cn-north-1.amazonaws.com.cn", true, true);
        updateRegion(region12, ServiceAbbreviations.CloudWatch, "monitoring.cn-north-1.amazonaws.com.cn", true, true);
        Region region13 = new Region("us-gov-west-1", "");
        ret.add(region13);
        updateRegion(region13, ServiceAbbreviations.Dynamodb, "dynamodb.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(region13, ServiceAbbreviations.EC2, "ec2.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(region13, ServiceAbbreviations.SNS, "sns.us-gov-west-1.amazonaws.com", true, true);
        updateRegion(region13, ServiceAbbreviations.SQS, "sqs.us-gov-west-1.amazonaws.com", true, true);
        updateRegion(region13, "s3", "s3-us-gov-west-1.amazonaws.com", true, true);
        updateRegion(region13, ServiceAbbreviations.STS, "sts.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(region13, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-gov-west-1.amazonaws.com", true, true);
        updateRegion(region13, ServiceAbbreviations.Autoscaling, "autoscaling.us-gov-west-1.amazonaws.com", true, true);
        updateRegion(region13, ServiceAbbreviations.CloudWatch, "monitoring.us-gov-west-1.amazonaws.com", false, true);
        return ret;
    }

    private static void updateRegion(Region region, String service, String host, boolean http, boolean https) {
        Map<String, String> serviceEndpoints = region.getServiceEndpoints();
        Map<String, Boolean> httpSupport = region.getHttpSupport();
        Map<String, Boolean> httpsSupport = region.getHttpsSupport();
        serviceEndpoints.put(service, host);
        httpSupport.put(service, Boolean.valueOf(http));
        httpsSupport.put(service, Boolean.valueOf(https));
    }
}
